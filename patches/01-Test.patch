Subject: [PATCH] Implement test testGetCharactersCharacterIdNotifications
---
Index: test/Api/CharacterApiTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test/Api/CharacterApiTest.php b/test/Api/CharacterApiTest.php
--- a/test/Api/CharacterApiTest.php	(revision 44d7f408535d85ab35d5e5cc28fd00cb7b340f7d)
+++ b/test/Api/CharacterApiTest.php	(revision 9dd738c262f0af7d96f80b7d316bedd478b819cc)
@@ -27,10 +27,14 @@

 namespace Swagger\Client\Eve\Test\Api;

+use GuzzleHttp\Psr7\Response;
+use Swagger\Client\Eve\Api\CharacterApi;
 use \Swagger\Client\Eve\Configuration;
 use \Swagger\Client\Eve\ApiException;
+use Swagger\Client\Eve\Model\GetCharactersCharacterIdNotifications200Ok;
 use \Swagger\Client\Eve\ObjectSerializer;
 use PHPUnit\Framework\TestCase;
+use Swagger\Client\Eve\Test\Client;

 /**
  * CharacterApiTest Class Doc Comment
@@ -151,8 +155,9 @@
      */
     public function testGetCharactersCharacterIdNotifications()
     {
-        // TODO: implement
-        self::markTestIncomplete('Not implemented');
+        $api = new CharacterApi(new Client(new Response(200, [], '[{"type": "InvalidEnumValue"}]')));
+        $result = $api->getCharactersCharacterIdNotifications(96061222);
+        $this->assertInstanceOf(GetCharactersCharacterIdNotifications200Ok::class, $result[0]);
     }

     /**
Index: test/Client.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test/Client.php b/test/Client.php
new file mode 100644
--- /dev/null	(revision 9dd738c262f0af7d96f80b7d316bedd478b819cc)
+++ b/test/Client.php	(revision 9dd738c262f0af7d96f80b7d316bedd478b819cc)
@@ -0,0 +1,23 @@
+<?php
+
+namespace Swagger\Client\Eve\Test;
+
+use Psr\Http\Message\RequestInterface;
+use Psr\Http\Message\ResponseInterface;
+
+class Client extends \GuzzleHttp\Client
+{
+    private array $responses;
+
+    public function __construct(ResponseInterface ...$responses)
+    {
+        parent::__construct([]);
+
+        $this->responses = $responses;
+    }
+
+    public function send(RequestInterface $request, array $options = []): ResponseInterface
+    {
+        return array_shift($this->responses);
+    }
+}
diff --git a/test/Model/.gitkeep b/test/Model/.gitkeep
new file mode 100644
